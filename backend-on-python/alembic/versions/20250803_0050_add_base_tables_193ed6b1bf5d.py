"""add base tables

Revision ID: 193ed6b1bf5d
Revises:
Create Date: 2025-08-03 00:50:58.458786

"""

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "193ed6b1bf5d"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "countries",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("emoji", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_countries_id"), "countries", ["id"], unique=False)
    op.create_index(op.f("ix_countries_name"), "countries", ["name"], unique=True)
    op.create_table(
        "organizations",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("short_name", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column(
            "subscription",
            sa.Enum("FREE", "PAID", name="organization_subscription_type_enum"),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_organizations_id"), "organizations", ["id"], unique=False)
    op.create_index(
        op.f("ix_organizations_name"), "organizations", ["name"], unique=True
    )
    op.create_table(
        "professions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("category", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("start_salary", sa.DECIMAL(precision=10, scale=2), nullable=True),
        sa.Column("end_salary", sa.DECIMAL(precision=10, scale=2), nullable=True),
        sa.Column(
            "popularity",
            sa.Enum("LOW", "MEDIUM", "HIGH", name="popularity_enum"),
            nullable=True,
        ),
        sa.Column("skills", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_professions_id"), "professions", ["id"], unique=False)
    op.create_index(op.f("ix_professions_name"), "professions", ["name"], unique=True)
    op.create_table(
        "tests",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("tags", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("estimated_time_minutes", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_tests_id"), "tests", ["id"], unique=False)
    op.create_table(
        "cities",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("country_id", sa.BigInteger(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["country_id"],
            ["countries.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_cities_id"), "cities", ["id"], unique=False)
    op.create_index(op.f("ix_cities_name"), "cities", ["name"], unique=True)
    op.create_table(
        "organization_groups",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("organization_id", sa.BigInteger(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organizations.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_organization_groups_id"), "organization_groups", ["id"], unique=False
    )
    op.create_table(
        "questions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("test_id", sa.Integer(), nullable=False),
        sa.Column("question", sa.Text(), nullable=False),
        sa.Column("order", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["test_id"],
            ["tests.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_questions_id"), "questions", ["id"], unique=False)
    op.create_table(
        "answers",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("question_id", sa.Integer(), nullable=False),
        sa.Column("answer", sa.Text(), nullable=False),
        sa.Column("is_correct", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["question_id"],
            ["questions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_answers_id"), "answers", ["id"], unique=False)
    op.create_table(
        "institutions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("short_name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("foundation_year", sa.String(), nullable=True),
        sa.Column(
            "financing_type",
            sa.Enum("PRIVATE", "GOV", "AUTONOMOUS", name="institutionfinancingtype"),
            nullable=False,
        ),
        sa.Column(
            "type",
            sa.Enum("SCHOOL", "COLLEGE", "UNIVERSITY", name="institutiontype"),
            nullable=False,
        ),
        sa.Column("website", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("contact_number", sa.String(), nullable=True),
        sa.Column("city_id", sa.Integer(), nullable=False),
        sa.Column("country_id", sa.Integer(), nullable=False),
        sa.Column("address", sa.String(), nullable=True),
        sa.Column("has_dorm", sa.Boolean(), nullable=True),
        sa.Column("image_url", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["city_id"],
            ["cities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["country_id"],
            ["countries.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_institutions_id"), "institutions", ["id"], unique=False)
    op.create_table(
        "users",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("first_name", sa.String(), nullable=False),
        sa.Column("last_name", sa.String(), nullable=False),
        sa.Column(
            "role",
            sa.Enum("USER", "SUPERADMIN", "MINISTRY", name="user_role_enum"),
            nullable=False,
        ),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column("date_of_birth", sa.DateTime(timezone=True), nullable=True),
        sa.Column(
            "subscription",
            sa.Enum("FREE", "PAID", name="subscription_type_enum"),
            nullable=False,
        ),
        sa.Column("verified", sa.Boolean(), nullable=False),
        sa.Column("organization_name", sa.String(), nullable=True),
        sa.Column("city_id", sa.BigInteger(), nullable=True),
        sa.Column("bio_about", sa.Text(), nullable=True),
        sa.Column("banner_id", sa.BigInteger(), nullable=True),
        sa.Column("avatar_id", sa.BigInteger(), nullable=True),
        sa.Column("onboarded", sa.Boolean(), nullable=False),
        sa.Column(
            "interests",
            postgresql.ARRAY(
                sa.Enum(
                    "MATHEMATICS",
                    "PHYSICS",
                    "CHEMISTRY",
                    "BIOLOGY",
                    "COMPUTER_SCIENCE",
                    "HISTORY",
                    "GEOGRAPHY",
                    "LITERATURE",
                    "LANGUAGES",
                    "ART",
                    "MUSIC",
                    "SPORTS",
                    "ECONOMICS",
                    "PSYCHOLOGY",
                    "MEDICINE",
                    "ENGINEERING",
                    "BUSINESS",
                    "DESIGN",
                    "AI_MACHINE_LEARNING",
                    "DATA_SCIENCE",
                    "CYBERSECURITY",
                    "GAME_DEVELOPMENT",
                    "DIGITAL_CONTENT_CREATION",
                    "E_SPORTS",
                    "ROBOTICS",
                    "GRAPHIC_DESIGN",
                    "FASHION",
                    "ENTREPRENEURSHIP",
                    "ENVIRONMENTAL_STUDIES",
                    "MENTAL_WELLBEING",
                    "FINANCE",
                    "COOKING",
                    "TRAVEL",
                    name="interests_enum",
                )
            ),
            nullable=True,
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["city_id"],
            ["cities.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_index(op.f("ix_users_username"), "users", ["username"], unique=True)
    op.create_table(
        "institution_enrollment_documents",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("institution_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["institution_id"],
            ["institutions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_institution_enrollment_documents_id"),
        "institution_enrollment_documents",
        ["id"],
        unique=False,
    )
    op.create_table(
        "institution_enrollment_requirements",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "type",
            sa.Enum("ACADEMIC", "LANGUAGE", "OTHER", name="enrollmentrequirementtype"),
            nullable=False,
        ),
        sa.Column("value", sa.String(), nullable=True),
        sa.Column("institution_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["institution_id"],
            ["institutions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_institution_enrollment_requirements_id"),
        "institution_enrollment_requirements",
        ["id"],
        unique=False,
    )
    op.create_table(
        "institution_majors",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("duration_years", sa.Integer(), nullable=True),
        sa.Column("learning_language", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("price", sa.Float(), nullable=True),
        sa.Column(
            "category",
            sa.Enum(
                "STEM",
                "BUSINESS",
                "ARTS",
                "HUMANITIES",
                "MEDICINE",
                "LAW",
                "OTHER",
                name="institutionmajorcategory",
            ),
            nullable=False,
        ),
        sa.Column("institution_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["institution_id"],
            ["institutions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_institution_majors_id"), "institution_majors", ["id"], unique=False
    )
    op.create_table(
        "organization_users",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("organization_id", sa.BigInteger(), nullable=False),
        sa.Column("status", sa.String(), nullable=True),
        sa.Column(
            "role",
            sa.Enum(
                "STUDYING",
                "GRADUATED",
                "STAFF",
                "STUDENT",
                name="organization_user_role_enum",
            ),
            nullable=False,
        ),
        sa.Column("group_id", sa.BigInteger(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["organization_groups.id"],
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organizations.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_organization_users_id"), "organization_users", ["id"], unique=False
    )
    op.create_table(
        "personality_analysis",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_personality_analysis_id"), "personality_analysis", ["id"], unique=False
    )
    op.create_table(
        "posts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("author_id", sa.Integer(), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("tags", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("mentions", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["author_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_posts_id"), "posts", ["id"], unique=False)
    op.create_table(
        "test_submission",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("test_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("COMPLETED", "ACTIVE", "NOT_STARTED", name="testsubmissionstatus"),
            nullable=False,
        ),
        sa.Column("analysis_summary", sa.Text(), nullable=True),
        sa.Column("analysis_key_factors", postgresql.ARRAY(sa.String()), nullable=True),
        sa.ForeignKeyConstraint(
            ["test_id"],
            ["tests.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_test_submission_id"), "test_submission", ["id"], unique=False
    )
    op.create_table(
        "university_analyses",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=True
        ),
        sa.Column("country_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["country_id"],
            ["countries.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_university_analyses_id"), "university_analyses", ["id"], unique=False
    )
    op.create_table(
        "user_sessions",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("token", sa.String(), nullable=False),
        sa.Column("expires_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_sessions_id"), "user_sessions", ["id"], unique=False)
    op.create_index(
        op.f("ix_user_sessions_token"), "user_sessions", ["token"], unique=True
    )
    op.create_table(
        "users_academic",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("gpa", sa.Float(), nullable=True),
        sa.Column("sat", sa.Integer(), nullable=True),
        sa.Column("ielts", sa.Float(), nullable=True),
        sa.Column("toefl", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id"),
    )
    op.create_index(
        op.f("ix_users_academic_id"), "users_academic", ["id"], unique=False
    )
    op.create_table(
        "users_language_proficiency",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("language", sa.String(), nullable=False),
        sa.Column(
            "level",
            sa.Enum("NATIVE", "FLUENT", "BEGINNER", name="language_level_enum"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_users_language_proficiency_id"),
        "users_language_proficiency",
        ["id"],
        unique=False,
    )
    op.create_table(
        "personality_analysis_attributes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("personality_analysis_id", sa.Integer(), nullable=False),
        sa.Column(
            "type",
            sa.Enum("PROS", "CONS", name="personalityanalysisattributetype"),
            nullable=False,
        ),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("recommendations", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["personality_analysis_id"],
            ["personality_analysis.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_personality_analysis_attributes_id"),
        "personality_analysis_attributes",
        ["id"],
        unique=False,
    )
    op.create_table(
        "personality_analysis_majors",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("personality_analysis_id", sa.Integer(), nullable=False),
        sa.Column("category", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["personality_analysis_id"],
            ["personality_analysis.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_personality_analysis_majors_id"),
        "personality_analysis_majors",
        ["id"],
        unique=False,
    )
    op.create_table(
        "personality_analysis_mbti",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("personality_analysis_id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("mbti_code", sa.String(), nullable=True),
        sa.Column("mbti_name", sa.String(), nullable=True),
        sa.Column("short_attributes", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("work_styles", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("introversion_percentage", sa.Integer(), nullable=True),
        sa.Column("thinking_percentage", sa.Integer(), nullable=True),
        sa.Column("creativity_percentage", sa.Integer(), nullable=True),
        sa.Column("intuition_percentage", sa.Integer(), nullable=True),
        sa.Column("planning_percentage", sa.Integer(), nullable=True),
        sa.Column("leading_percentage", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["personality_analysis_id"],
            ["personality_analysis.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_personality_analysis_mbti_id"),
        "personality_analysis_mbti",
        ["id"],
        unique=False,
    )
    op.create_table(
        "personality_analysis_professions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("personality_analysis_id", sa.Integer(), nullable=False),
        sa.Column("profession_id", sa.Integer(), nullable=False),
        sa.Column("percentage", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["personality_analysis_id"],
            ["personality_analysis.id"],
        ),
        sa.ForeignKeyConstraint(
            ["profession_id"],
            ["professions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_personality_analysis_professions_id"),
        "personality_analysis_professions",
        ["id"],
        unique=False,
    )
    op.create_table(
        "post_comments",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("post_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["post_id"],
            ["posts.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_post_comments_id"), "post_comments", ["id"], unique=False)
    op.create_table(
        "post_likes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("post_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["post_id"],
            ["posts.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_post_likes_id"), "post_likes", ["id"], unique=False)
    op.create_table(
        "test_submission_question",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("submission_id", sa.Integer(), nullable=False),
        sa.Column("question_id", sa.Integer(), nullable=False),
        sa.Column("answer_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["answer_id"],
            ["answers.id"],
        ),
        sa.ForeignKeyConstraint(
            ["question_id"],
            ["questions.id"],
        ),
        sa.ForeignKeyConstraint(
            ["submission_id"],
            ["test_submission.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_test_submission_question_id"),
        "test_submission_question",
        ["id"],
        unique=False,
    )
    op.create_table(
        "university_analysis_results",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("analysis_id", sa.Integer(), nullable=False),
        sa.Column("institution_id", sa.Integer(), nullable=False),
        sa.Column("probability_percentage", sa.Float(), nullable=False),
        sa.Column("lowest_major_price", sa.Float(), nullable=True),
        sa.Column("key_factors", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column(
            "recommendation_type",
            sa.Enum("SAFETY", "TARGET", "REACH", name="recommendationtype"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["analysis_id"],
            ["university_analyses.id"],
        ),
        sa.ForeignKeyConstraint(
            ["institution_id"],
            ["institutions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_university_analysis_results_id"),
        "university_analysis_results",
        ["id"],
        unique=False,
    )
    op.create_table(
        "university_analysis_matching_majors",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("result_id", sa.Integer(), nullable=False),
        sa.Column("major_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["major_id"],
            ["institution_majors.id"],
        ),
        sa.ForeignKeyConstraint(
            ["result_id"],
            ["university_analysis_results.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_university_analysis_matching_majors_id"),
        "university_analysis_matching_majors",
        ["id"],
        unique=False,
    )
    op.create_table(
        "university_analysis_missing_requirements",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("result_id", sa.Integer(), nullable=False),
        sa.Column("requirement_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["requirement_id"],
            ["institution_enrollment_requirements.id"],
        ),
        sa.ForeignKeyConstraint(
            ["result_id"],
            ["university_analysis_results.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_university_analysis_missing_requirements_id"),
        "university_analysis_missing_requirements",
        ["id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_university_analysis_missing_requirements_id"),
        table_name="university_analysis_missing_requirements",
    )
    op.drop_table("university_analysis_missing_requirements")
    op.drop_index(
        op.f("ix_university_analysis_matching_majors_id"),
        table_name="university_analysis_matching_majors",
    )
    op.drop_table("university_analysis_matching_majors")
    op.drop_index(
        op.f("ix_university_analysis_results_id"),
        table_name="university_analysis_results",
    )
    op.drop_table("university_analysis_results")
    op.drop_index(
        op.f("ix_test_submission_question_id"), table_name="test_submission_question"
    )
    op.drop_table("test_submission_question")
    op.drop_index(op.f("ix_post_likes_id"), table_name="post_likes")
    op.drop_table("post_likes")
    op.drop_index(op.f("ix_post_comments_id"), table_name="post_comments")
    op.drop_table("post_comments")
    op.drop_index(
        op.f("ix_personality_analysis_professions_id"),
        table_name="personality_analysis_professions",
    )
    op.drop_table("personality_analysis_professions")
    op.drop_index(
        op.f("ix_personality_analysis_mbti_id"), table_name="personality_analysis_mbti"
    )
    op.drop_table("personality_analysis_mbti")
    op.drop_index(
        op.f("ix_personality_analysis_majors_id"),
        table_name="personality_analysis_majors",
    )
    op.drop_table("personality_analysis_majors")
    op.drop_index(
        op.f("ix_personality_analysis_attributes_id"),
        table_name="personality_analysis_attributes",
    )
    op.drop_table("personality_analysis_attributes")
    op.drop_index(
        op.f("ix_users_language_proficiency_id"),
        table_name="users_language_proficiency",
    )
    op.drop_table("users_language_proficiency")
    op.drop_index(op.f("ix_users_academic_id"), table_name="users_academic")
    op.drop_table("users_academic")
    op.drop_index(op.f("ix_user_sessions_token"), table_name="user_sessions")
    op.drop_index(op.f("ix_user_sessions_id"), table_name="user_sessions")
    op.drop_table("user_sessions")
    op.drop_index(op.f("ix_university_analyses_id"), table_name="university_analyses")
    op.drop_table("university_analyses")
    op.drop_index(op.f("ix_test_submission_id"), table_name="test_submission")
    op.drop_table("test_submission")
    op.drop_index(op.f("ix_posts_id"), table_name="posts")
    op.drop_table("posts")
    op.drop_index(op.f("ix_personality_analysis_id"), table_name="personality_analysis")
    op.drop_table("personality_analysis")
    op.drop_index(op.f("ix_organization_users_id"), table_name="organization_users")
    op.drop_table("organization_users")
    op.drop_index(op.f("ix_institution_majors_id"), table_name="institution_majors")
    op.drop_table("institution_majors")
    op.drop_index(
        op.f("ix_institution_enrollment_requirements_id"),
        table_name="institution_enrollment_requirements",
    )
    op.drop_table("institution_enrollment_requirements")
    op.drop_index(
        op.f("ix_institution_enrollment_documents_id"),
        table_name="institution_enrollment_documents",
    )
    op.drop_table("institution_enrollment_documents")
    op.drop_index(op.f("ix_users_username"), table_name="users")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_institutions_id"), table_name="institutions")
    op.drop_table("institutions")
    op.drop_index(op.f("ix_answers_id"), table_name="answers")
    op.drop_table("answers")
    op.drop_index(op.f("ix_questions_id"), table_name="questions")
    op.drop_table("questions")
    op.drop_index(op.f("ix_organization_groups_id"), table_name="organization_groups")
    op.drop_table("organization_groups")
    op.drop_index(op.f("ix_cities_name"), table_name="cities")
    op.drop_index(op.f("ix_cities_id"), table_name="cities")
    op.drop_table("cities")
    op.drop_index(op.f("ix_tests_id"), table_name="tests")
    op.drop_table("tests")
    op.drop_index(op.f("ix_professions_name"), table_name="professions")
    op.drop_index(op.f("ix_professions_id"), table_name="professions")
    op.drop_table("professions")
    op.drop_index(op.f("ix_organizations_name"), table_name="organizations")
    op.drop_index(op.f("ix_organizations_id"), table_name="organizations")
    op.drop_table("organizations")
    op.drop_index(op.f("ix_countries_name"), table_name="countries")
    op.drop_index(op.f("ix_countries_id"), table_name="countries")
    op.drop_table("countries")
    # ### end Alembic commands ###
